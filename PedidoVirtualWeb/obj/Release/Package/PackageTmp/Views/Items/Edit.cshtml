@model PedidoVirtualWeb.Models.Item

@{
    ViewBag.Title = "Editar Item";
}

<h1 style="color:#FFFFFF">Editar Item</h1>
<hr />
<p>@Html.ActionLink("Voltar", "Index", new { }, new { @class = "btn btn-primary" })</p>

@using (Html.BeginForm("Edit", "Items", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container">

        <div style="margin-top:20px; background-color:#E1E1E1; padding:10px; border-radius:5px; border:2px solid #FFFFFF" class="row form-horizontal">

            @Html.HiddenFor(model => model.ItemId)
            @Html.HiddenFor(model => model.Foto)
            @Html.HiddenFor(model => model.ComentarioTemporario)


            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoriaId, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="col-md-10">
                        @Html.DropDownList("CategoriaId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FotoFile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <span class="btn btn-default btn-file">
                            @Html.TextBoxFor(model => model.FotoFile, new { type = "file" })
                        </span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Preco, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Preco, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Preco, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Estoque, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Estoque, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Estoque, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

        </div>

    </div>
    <br />
    <input type="submit" value="Save" class="btn btn-primary" />
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
